---
# tasks file for setup_nova_controller
- name: Create nova database
  shell: "{{ item }}"
  with_items:
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE nova_api; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '{{ MYSQL_NOVA_DBPASS }}'; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '{{ MYSQL_NOVA_DBPASS }}'; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE nova; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '{{ MYSQL_NOVA_DBPASS }}'; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '{{ MYSQL_NOVA_DBPASS }}'; "

- name: Create user and add to role
  shell: "{{ item }}"
  with_items:
    - openstack user create --domain default --password {{ NOVA_PASSWORD }} nova
    - openstack role add --project service --user nova admin

- name: Create the service entity and API endpoints
  shell: "{{ item }}"
  with_items:
    - openstack service create --name nova --description "OpenStack Compute" compute
    - openstack endpoint create --region RegionOne compute public http://{{ NOVA_SERVER_NAME }}:8774/v2.1/%\(tenant_id\)s
    - openstack endpoint create --region RegionOne compute internal http://{{ NOVA_SERVER_NAME }}:8774/v2.1/%\(tenant_id\)s
    - openstack endpoint create --region RegionOne compute admin http://{{ NOVA_SERVER_NAME }}:8774/v2.1/%\(tenant_id\)s

- name: Install nova controller packages
  apt: pkg={{ item }}
  with_items:
    - nova-api
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
    - nova-scheduler

- name: Configure nova.conf file
  ini_file:
      dest: /etc/nova/nova.conf
      section: "{{item.section}}"
      option:  "{{item.option}}"
      value:   "{{item.value}}"
      backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'DEFAULT'           , option : 'enabled_apis'       , value: 'osapi_compute,metadata'}
    - { backup : no,   section : 'api_database'      , option : 'connection'         , value: 'mysql+pymysql://nova:{{ MYSQL_NOVA_DBPASS }}@controller/nova_api'}
    - { backup : no,   section : 'database'          , option : 'connection'         , value: 'mysql+pymysql://nova:{{ MYSQL_NOVA_DBPASS }}@controller/nova'}
    - { backup : no,   section : 'DEFAULT'           , option : 'rpc_backend'        , value: 'rabbit'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_host'     , value: '{{ RABBITMQ_SERVER }}'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_userid'   , value: '{{ RABBITMQ_USER }}'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_password' , value: '{{ RABBITMQ_PASSWORD }}'}
    - { backup : no,   section : 'DEFAULT'           , option : 'auth_strategy'      , value: 'keystone'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_uri'           , value : 'http://{{ KEYSTONE_SERVER_NAME }}:5000'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_url'           , value : 'http://{{ KEYSTONE_SERVER_NAME }}:35357'}
    - { backup : no,   section : 'keystone_authtoken', option : 'memcached_servers'  , value : '{{ MEMCACHED_SERVER_NAME }}:11211'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_type'          , value : 'password'}
    - { backup : no,   section : 'keystone_authtoken', option : 'project_domain_name', value : 'default'}
    - { backup : no,   section : 'keystone_authtoken', option : 'user_domain_name'   , value : 'default'}
    - { backup : no,   section : 'keystone_authtoken', option : 'project_name'       , value : 'service'}
    - { backup : no,   section : 'keystone_authtoken', option : 'username'           , value : 'nova'}
    - { backup : no,   section : 'keystone_authtoken', option : 'password'           , value : '{{ NOVA_PASSWORD }}'}
    - { backup : no,   section : 'DEFAULT'           , option : 'my_ip'              , value : '{{ ansible_default_ipv4.address }}'}
    - { backup : no,   section : 'DEFAULT'           , option : 'use_neutron'        , value : 'True'}
    - { backup : no,   section : 'DEFAULT'           , option : 'firewall_driver'    , value : 'nova.virt.firewall.NoopFirewallDriver'}
    - { backup : no,   section : 'vnc'               , option : 'vncserver_listen'   , value : '$my_ip'}
    - { backup : no,   section : 'vnc'               , option : 'vncserver_proxyclient_address'   , value: '$my_ip'}
    - { backup : no,   section : 'glance'            , option : 'api_servers'        , value : 'http://{{ GLANCE_SERVER_NAME }}:9292'}
    - { backup : no,   section : 'oslo_concurrency'  , option : 'lock_path'          , value : '/var/lib/nova/tmp'}

- name: Populate the Compute database
  shell: "{{ item }}"
  with_items:
    - nova-manage api_db sync
    - nova-manage db sync

- name: Restart the Compute service
  service:
    state: restarted
    name: "{{ item }}"
  with_items:
    - nova-api
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
    - nova-scheduler
