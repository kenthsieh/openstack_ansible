---
# tasks file for setup_neutron_controller
- name: Create neutron database
  shell: "{{ item }}"
  with_items:
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE neutron; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY '{{ MYSQL_NEUTRON_DBPASS }}'; "
    - mysql -u root -p{{ MYSQL_ROOT_PASSWORD }} -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY '{{ MYSQL_NEUTRON_DBPASS }}'; "

- name: Create user and add to role
  shell: "{{ item }}"
  with_items:
    - openstack user create --domain default --password {{ NEUTRON_PASSWORD }} neutron
    - openstack role add --project service --user neutron admin

- name: Create the service entity and API endpoints
  shell: "{{ item }}"
  with_items:
    - openstack service create --name neutron --description "OpenStack Networking" network
    - openstack endpoint create --region RegionOne network public http://{{ NEUTRON_SERVER_NAME }}:9696
    - openstack endpoint create --region RegionOne network internal http://{{ NEUTRON_SERVER_NAME }}:9696
    - openstack endpoint create --region RegionOne network admin http://{{ NEUTRON_SERVER_NAME }}:9696

- name: Install neutron controller packages
  apt: pkg={{ item }}
  with_items:
    - neutron-server
    - neutron-plugin-ml2
    - neutron-linuxbridge-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent

- name: Configure neutron.conf file
  ini_file:
    dest: /etc/neutron/neutron.conf
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'database'          , option : 'connection'         , value: 'mysql+pymysql://neutron:{{ MYSQL_NEUTRON_DBPASS }}@controller/neutron'}
    - { backup : no,   section : 'DEFAULT'           , option : 'core_plugin'           , value: 'ml2'}
    - { backup : no,   section : 'DEFAULT'           , option : 'service_plugins'       , value: 'router'}
    - { backup : no,   section : 'DEFAULT'           , option : 'allow_overlapping_ips' , value: 'True'}
    - { backup : no,   section : 'DEFAULT'           , option : 'rpc_backend'         , value: 'rabbit'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_host'     , value: '{{ RABBITMQ_SERVER }}'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_userid'   , value: '{{ RABBITMQ_USER }}'}
    - { backup : no,   section : 'oslo_messaging_rabbit', option : 'rabbit_password' , value: '{{ RABBITMQ_PASSWORD }}'}
    - { backup : no,   section : 'DEFAULT'           , option : 'auth_strategy'         , value: 'keystone'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_uri'           , value : 'http://{{ KEYSTONE_SERVER_NAME }}:5000'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_url'           , value : 'http://{{ KEYSTONE_SERVER_NAME }}:35357'}
    - { backup : no,   section : 'keystone_authtoken', option : 'memcached_servers'  , value : '{{ MEMCACHED_SERVER_NAME }}:11211'}
    - { backup : no,   section : 'keystone_authtoken', option : 'auth_type'          , value : 'password'}
    - { backup : no,   section : 'keystone_authtoken', option : 'project_domain_name', value : 'default'}
    - { backup : no,   section : 'keystone_authtoken', option : 'user_domain_name'   , value : 'default'}
    - { backup : no,   section : 'keystone_authtoken', option : 'project_name'       , value : 'service'}
    - { backup : no,   section : 'keystone_authtoken', option : 'username'           , value : 'neutron'}
    - { backup : no,   section : 'keystone_authtoken', option : 'password'           , value : '{{ NEUTRON_PASSWORD }}'}
    - { backup : no,   section : 'DEFAULT'           , option : 'notify_nova_on_port_status_changes'   , value: 'True'}
    - { backup : no,   section : 'DEFAULT'           , option : 'notify_nova_on_port_data_changes'     , value: 'True'}
    - { backup : no,   section : 'nova', option : 'auth_url'           , value : 'http://{{ NEUTRON_SERVER_NAME }}:35357'}
    - { backup : no,   section : 'nova', option : 'auth_type'          , value : 'password'}
    - { backup : no,   section : 'nova', option : 'project_domain_name', value : 'default'}
    - { backup : no,   section : 'nova', option : 'user_domain_name'   , value : 'default'}
    - { backup : no,   section : 'nova', option : 'region_name'        , value : 'RegionOne'}
    - { backup : no,   section : 'nova', option : 'project_name'       , value : 'service'}
    - { backup : no,   section : 'nova', option : 'username'           , value : 'nova'}
    - { backup : no,   section : 'nova', option : 'password'           , value : '{{ NOVA_PASSWORD }}'}

- name: Configure ml2_conf.ini file
  ini_file:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'ml2'           , option : 'type_drivers'         , value: 'flat,vlan,vxlan'}
    - { backup : no,   section : 'ml2'           , option : 'tenant_network_types' , value: 'vxlan'}
    - { backup : no,   section : 'ml2'           , option : 'mechanism_drivers'    , value: 'linuxbridge,l2population'}
    - { backup : no,   section : 'ml2'           , option : 'extension_drivers'    , value: 'port_security'}
    - { backup : no,   section : 'ml2_type_flat' , option : 'flat_networks'        , value: 'provider'}
    - { backup : no,   section : 'ml2_type_vxlan', option : 'vni_ranges'           , value: '1:1000'}
    - { backup : no,   section : 'securitygroup' , option : 'enable_ipset'         , value: 'True'}

- name: Configure linuxbridge_agent.ini file
  ini_file:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'linux_bridge'  , option : 'physical_interface_mappings' , value: 'provider:{{ INTERFACE_NAME }}'}
    - { backup : no,   section : 'vxlan'         , option : 'enable_vxlan'                , value: 'True'}
    - { backup : no,   section : 'vxlan'         , option : 'local_ip'                    , value: '{{ ansible_default_ipv4.address }}'}
    - { backup : no,   section : 'vxlan'         , option : 'l2_population'               , value: 'True'}
    - { backup : no,   section : 'securitygroup' , option : 'enable_security_group'       , value: 'True'}
    - { backup : no,   section : 'securitygroup' , option : 'firewall_driver'             , value: 'neutron.agent.linux.iptables_firewall.IptablesFirewallDriver'}

- name: Configure l3_agent.ini file
  ini_file:
    dest: /etc/neutron/l3_agent.ini
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'DEFAULT'  , option : 'interface_driver'        , value: 'neutron.agent.linux.interface.BridgeInterfaceDriver'}
    - { backup : no,   section : 'DEFAULT'  , option : 'external_network_bridge' , value: ''}

- name: Configure dhcp_agent.ini file
  ini_file:
    dest: /etc/neutron/dhcp_agent.ini
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'DEFAULT'  , option : 'interface_driver' , value: 'neutron.agent.linux.interface.BridgeInterfaceDriver'}
    - { backup : no,   section : 'DEFAULT'  , option : 'dhcp_driver'      , value: 'neutron.agent.linux.dhcp.Dnsmasq'}
    - { backup : no,   section : 'DEFAULT'  , option : 'enable_isolated_metadata' , value: 'True'}

- name: Configure metadata_agent.ini file
  ini_file:
    dest: /etc/neutron/metadata_agent.ini
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : yes,  section : 'DEFAULT'  , option : 'nova_metadata_ip'             , value: 'controller'}
    - { backup : no,   section : 'DEFAULT'  , option : 'metadata_proxy_shared_secret' , value: '{{ METADATA_SECRET }}'}

- name: Configure nova.conf file
  ini_file:
    dest: /etc/nova/nova.conf
    section: "{{item.section}}"
    option:  "{{item.option}}"
    value:   "{{item.value}}"
    backup:  "{{item.backup}}"
  with_items:
    - { backup : 'yes',  section : 'neutron', option : 'url'                    , value : 'http://{{ NEUTRON_SERVER_NAME }}:9696'}
    - { backup : 'no',   section : 'neutron', option : 'auth_url'               , value : 'http://{{ KEYSTONE_SERVER_NAME }}:35357'}
    - { backup : 'no',   section : 'neutron', option : 'auth_type'              , value : 'password'}
    - { backup : 'no',   section : 'neutron', option : 'project_domain_name'    , value : 'default'}
    - { backup : 'no',   section : 'neutron', option : 'user_domain_name'       , value : 'default'}
    - { backup : 'no',   section : 'neutron', option : 'region_name'            , value : 'RegionOne'}
    - { backup : 'no',   section : 'neutron', option : 'project_name'           , value : 'service'}
    - { backup : 'no',   section : 'neutron', option : 'username'               , value : 'neutron'}
    - { backup : 'no',   section : 'neutron', option : 'password'               , value : '{{ NEUTRON_PASSWORD }}'}
    - { backup : 'no',   section : 'neutron', option : 'service_metadata_proxy'       , value : 'True'}
    - { backup : 'no',   section : 'neutron', option : 'metadata_proxy_shared_secret' , value : '{{ METADATA_SECRET }}'}
  tags: neutron_controller_nova

- name: Populate the Neutron database
  shell: "{{ item }}"
  with_items:
    - neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head
  tags: neutron_controller_populate_database

- name: Restart the Neutron service
  service:
    state: restarted
    name: "{{ item }}"
  with_items:
    - nova-api
    - neutron-server
    - neutron-linuxbridge-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent
  tags: neutron_controller_restart_service
